master_process on;
worker_processes auto;
worker_cpu_affinity auto;

error_log logs/error.log warn;
#error_log logs/error.log debug;

http {
    lua_package_path "$prefix/lua/?.lua;$prefix/lua/vendor/?.lua;;";

    lua_socket_connect_timeout 10s;
    lua_socket_read_timeout 10s;
    lua_socket_send_timeout 10s;

    resolver 8.8.4.4 ipv6=off;
    #lua_code_cache off;

    init_by_lua_block {
        -- preload Lua modules
        require "opmserver"
    }

    server {
        server_name opm.openresty.org;

        # production deployment should use https here instead.
        listen 8080;

	lua_ssl_trusted_certificate root-ca.crt;
	lua_ssl_verify_depth 5;
	lua_ssl_protocols TLSv1.2;

        location = /api/upload {
            client_max_body_size 512k;
            client_body_in_file_only on;
            default_type text/plain;

            content_by_lua_block {
                require("opmserver").do_upload()
            }
        }

        location = /api/incoming {
            client_max_body_size 0;
            default_type text/json;

            allow 127.0.0.1;
            deny all;

            content_by_lua_block {
                require("opmserver").do_incoming()
            }
        }

        location = /api/fail-indexing {
            client_max_body_size 100k;
            client_body_buffer_size 100k;

            allow 127.0.0.1;
            deny all;

            content_by_lua_block {
                require("opmserver").do_fail_indexing()
            }
        }

        location = /api/complete-indexing {
            client_max_body_size 100k;
            client_body_buffer_size 100k;

            allow 127.0.0.1;
            deny all;

            content_by_lua_block {
                require("opmserver").do_complete_indexing()
            }
        }
    }
}

events {
    accept_mutex off;
}
